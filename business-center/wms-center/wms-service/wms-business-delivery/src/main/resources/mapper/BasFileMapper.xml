<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.szmsd.delivery.mapper.BasFileMapper" >
  <resultMap id="BaseResultMap" type="com.szmsd.delivery.domain.BasFile" >
    <id column="id" property="id" jdbcType="INTEGER" />
    <result column="create_by" property="createBy" jdbcType="VARCHAR" />
    <result column="create_by_name" property="createByName" jdbcType="VARCHAR" />
    <result column="create_time" property="createTime" jdbcType="TIMESTAMP" />
    <result column="update_by" property="updateBy" jdbcType="VARCHAR" />
    <result column="update_by_name" property="updateByName" jdbcType="VARCHAR" />
    <result column="update_time" property="updateTime" jdbcType="TIMESTAMP" />
    <result column="state" property="state" jdbcType="VARCHAR" />
    <result column="file_route" property="fileRoute" jdbcType="VARCHAR" />
    <result column="file_name" property="fileName" jdbcType="VARCHAR" />
    <result column="remark" property="remark" jdbcType="VARCHAR" />
    <result column="modular_name_zh" property="modularNameZh" jdbcType="VARCHAR" />
    <result column="modular_type" property="modularType" jdbcType="INTEGER" />
    <result column="modular_name_en" property="modularNameEn" jdbcType="VARCHAR" />

  </resultMap>
  <sql id="Base_Column_List" >
    id, create_by, create_by_name, create_time, update_by, update_by_name, update_time, file_route,file_name,
    state
  </sql>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Integer" >
    select 
    <include refid="Base_Column_List" />
    from bas_file
    where id = #{id,jdbcType=INTEGER}
  </select>
  <select id="selectDelOutboundCount" resultType="java.lang.Integer">
    SELECT
      COUNT(o.id)
    FROM del_outbound o
           LEFT JOIN del_outbound_address a ON a.order_no = o.order_no
      ${ew.customSqlSegment}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer" >
    delete from bas_file
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <insert id="insert" parameterType="com.szmsd.delivery.domain.BasFile" >
    insert into bas_file (id, create_by, create_by_name, 
      create_time, update_by, update_by_name, 
      update_time, state)
    values (#{id,jdbcType=INTEGER}, #{createBy,jdbcType=VARCHAR}, #{createByName,jdbcType=VARCHAR}, 
      #{createTime,jdbcType=TIMESTAMP}, #{updateBy,jdbcType=VARCHAR}, #{updateByName,jdbcType=VARCHAR}, 
      #{updateTime,jdbcType=TIMESTAMP}, #{state,jdbcType=VARCHAR})
  </insert>
  <insert id="insertSelective" parameterType="com.szmsd.delivery.domain.BasFile" useGeneratedKeys="true" keyProperty="id">
    insert into bas_file
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        id,
      </if>
      <if test="createBy != null" >
        create_by,
      </if>
      <if test="createByName != null" >
        create_by_name,
      </if>
      <if test="createTime != null" >
        create_time,
      </if>
      <if test="updateBy != null" >
        update_by,
      </if>
      <if test="updateByName != null" >
        update_by_name,
      </if>
      <if test="updateTime != null" >
        update_time,
      </if>
      <if test="state != null" >
        state,
      </if>
      <if test="fileRoute != null" >
        file_route,
      </if>
      <if test="fileName != null" >
        file_name,
      </if>
      <if test="remark != null" >
        remark,
      </if>
      <if test="modularNameZh != null" >
        modular_name_zh,
      </if>
      <if test="modularType != null" >
        modular_type,
      </if>
      <if test="modularNameEn != null" >
        modular_name_en,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        #{id,jdbcType=INTEGER},
      </if>
      <if test="createBy != null" >
        #{createBy,jdbcType=VARCHAR},
      </if>
      <if test="createByName != null" >
        #{createByName,jdbcType=VARCHAR},
      </if>
      <if test="createTime != null" >
        #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updateBy != null" >
        #{updateBy,jdbcType=VARCHAR},
      </if>
      <if test="updateByName != null" >
        #{updateByName,jdbcType=VARCHAR},
      </if>
      <if test="updateTime != null" >
        #{updateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="state != null" >
        #{state,jdbcType=VARCHAR},
      </if>
      <if test="fileRoute != null" >
        #{fileRoute,jdbcType=VARCHAR},
      </if>
      <if test="fileName != null" >
        #{fileName,jdbcType=VARCHAR},
      </if>
      <if test="remark != null" >
        #{remark,jdbcType=VARCHAR},
      </if>
      <if test="modularNameZh != null" >
        #{modularNameZh,jdbcType=VARCHAR},
      </if>
      <if test="modularType != null" >
        #{modularType,jdbcType=INTEGER},
      </if>
      <if test="modularNameEn != null" >
        #{modularNameEn,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.szmsd.delivery.domain.BasFile" >
    update bas_file
    <set >
      <if test="createBy != null" >
        create_by = #{createBy,jdbcType=VARCHAR},
      </if>
      <if test="createByName != null" >
        create_by_name = #{createByName,jdbcType=VARCHAR},
      </if>
      <if test="createTime != null" >
        create_time = #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updateBy != null" >
        update_by = #{updateBy,jdbcType=VARCHAR},
      </if>
      <if test="updateByName != null" >
        update_by_name = #{updateByName,jdbcType=VARCHAR},
      </if>
      <if test="updateTime != null" >
        update_time = #{updateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="state != null" >
        state = #{state,jdbcType=VARCHAR},
      </if>
      <if test="fileSize != null" >
        file_size = #{fileSize,jdbcType=VARCHAR},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.szmsd.delivery.domain.BasFile" >
    update bas_file
    set create_by = #{createBy,jdbcType=VARCHAR},
      create_by_name = #{createByName,jdbcType=VARCHAR},
      create_time = #{createTime,jdbcType=TIMESTAMP},
      update_by = #{updateBy,jdbcType=VARCHAR},
      update_by_name = #{updateByName,jdbcType=VARCHAR},
      update_time = #{updateTime,jdbcType=TIMESTAMP},
      state = #{state,jdbcType=VARCHAR}
    where id = #{id,jdbcType=INTEGER}
  </update>
</mapper>