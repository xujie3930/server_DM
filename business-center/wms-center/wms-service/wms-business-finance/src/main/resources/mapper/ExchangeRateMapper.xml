<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.szmsd.finance.mapper.ExchangeRateMapper">

    <select id="listPage" resultType="com.szmsd.finance.domain.ExchangeRate">
        select *from fss_exchange_rate
        <where>
            ${ew.sqlSegment}
        </where>
    </select>

    <select id="checkExchangeRateIsExists" resultType="com.szmsd.finance.domain.ExchangeRate"
        parameterType="com.szmsd.finance.dto.ExchangeRateDTO">
        select * from fss_exchange_rate
        where ((exchange_from_code=#{dto.exchangeFromCode} and exchange_to_code=#{dto.exchangeToCode})
        or (exchange_from_code=#{dto.exchangeToCode} and exchange_to_code=#{dto.exchangeFromCode}))
        <if test="dto.id != null">
            and id <![CDATA[ <> ]]> #{dto.id}
        </if>
    </select>
    <select id="selectRates" resultType="com.szmsd.finance.dto.ExchangeRateDTO">
        select * from fss_exchange_rate where exchange_from=#{map.exchangeFrom} and exchange_to=#{map.exchangeTo}
    </select>
    <delete id="deleteExchangeRate">
         delete from fss_exchange_rate where exchange_from=#{map.exchangeFrom} and exchange_to=#{map.exchangeTo}
    </delete>

    <insert id="saveBatch" parameterType="java.util.List">
        INSERT INTO `fss_exchange_rate`
            (`exchange_from_code`, `exchange_to_code`, `exchange_from`, `exchange_to`, `rate`, `expire_time`, `create_by_name`, `create_time`, `update_by_name`, `update_time`, `create_by`, `update_by`, `remark`)
        VALUES
        <foreach collection ="list" item="item" separator =",">
            (#{item.exchangeFromCode}, #{item.exchangeToCode}, #{item.exchangeFrom},#{item.exchangeTo},#{item.rate},#{item.expireTime},#{item.createByName},#{item.createTime},#{item.updateByName},#{item.updateTime},#{item.createBy},#{item.updateBy},#{item.remark})
        </foreach>
    </insert>
</mapper>
