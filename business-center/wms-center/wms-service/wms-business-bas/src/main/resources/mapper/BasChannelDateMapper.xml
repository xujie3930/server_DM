<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.szmsd.bas.mapper.BasChannelDateMapper" >
  <resultMap id="BaseResultMap" type="com.szmsd.bas.domain.BasChannelDate" >
    <id column="id" property="id" jdbcType="INTEGER" />
    <result column="channel_id" property="channelId" jdbcType="INTEGER" />
    <result column="estimate_whole_time" property="estimateWholeTime" jdbcType="VARCHAR" />
    <result column="sort_id" property="sortId" jdbcType="INTEGER" />
    <result column="create_time" property="createTime" jdbcType="TIMESTAMP" />
    <result column="update_time" property="updateTime" jdbcType="TIMESTAMP" />
    <result column="shipment_node_code" property="shipmentNodeCode" jdbcType="VARCHAR" />
    <result column="shipment_node_name" property="shipmentNodeName" jdbcType="VARCHAR" />
  </resultMap>
  <resultMap id="ResultMapWithBLOBs" type="com.szmsd.bas.domain.BasChannelDate" extends="BaseResultMap" >
    <result column="remarks" property="remarks" jdbcType="LONGVARCHAR" />
  </resultMap>
  <sql id="Base_Column_List" >
    id, channel_id, estimate_whole_time, sort_id, create_time, update_time, shipment_node_code, 
    shipment_node_name
  </sql>
  <sql id="Blob_Column_List" >
    remarks
  </sql>
  <select id="selectByPrimaryKey" resultMap="ResultMapWithBLOBs" parameterType="java.lang.Integer" >
    select 
    <include refid="Base_Column_List" />
    ,
    <include refid="Blob_Column_List" />
    from bas_channel_date
    where id = #{id,jdbcType=INTEGER}
  </select>
  <select id="selectListChannelDate" resultType="com.szmsd.bas.domain.BasChannelDate"
          parameterType="java.lang.Integer">
     SELECT * from bas_channel_date WHERE channel_id=#{id} ORDER BY sort_id ASC
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer" >
    delete from bas_channel_date
    where channel_id = #{id,jdbcType=INTEGER}
  </delete>
  <insert id="insert" parameterType="com.szmsd.bas.domain.BasChannelDate" >
    insert into bas_channel_date (id, channel_id, estimate_whole_time, 
      sort_id, create_time, update_time, 
      shipment_node_code, shipment_node_name, remarks
      )
    values (#{id,jdbcType=INTEGER}, #{channelId,jdbcType=INTEGER}, #{estimateWholeTime,jdbcType=VARCHAR}, 
      #{sortId,jdbcType=INTEGER}, #{createTime,jdbcType=TIMESTAMP}, #{updateTime,jdbcType=TIMESTAMP}, 
      #{shipmentNodeCode,jdbcType=VARCHAR}, #{shipmentNodeName,jdbcType=VARCHAR}, #{remarks,jdbcType=LONGVARCHAR}
      )
  </insert>
  <insert id="insertSelective" parameterType="com.szmsd.bas.domain.BasChannelDate"  >
    insert into bas_channel_date
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        id,
      </if>
      <if test="channelId != null" >
        channel_id,
      </if>
      <if test="estimateWholeTime != null" >
        estimate_whole_time,
      </if>
      <if test="sortId != null" >
        sort_id,
      </if>
      <if test="createTime != null" >
        create_time,
      </if>
      <if test="updateTime != null" >
        update_time,
      </if>
      <if test="shipmentNodeCode != null" >
        shipment_node_code,
      </if>
      <if test="shipmentNodeName != null" >
        shipment_node_name,
      </if>
      <if test="remarks != null" >
        remarks,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        #{id,jdbcType=INTEGER},
      </if>
      <if test="channelId != null" >
        #{channelId,jdbcType=INTEGER},
      </if>
      <if test="estimateWholeTime != null" >
        #{estimateWholeTime,jdbcType=VARCHAR},
      </if>
      <if test="sortId != null" >
        #{sortId,jdbcType=INTEGER},
      </if>
      <if test="createTime != null" >
        #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updateTime != null" >
        #{updateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="shipmentNodeCode != null" >
        #{shipmentNodeCode,jdbcType=VARCHAR},
      </if>
      <if test="shipmentNodeName != null" >
        #{shipmentNodeName,jdbcType=VARCHAR},
      </if>
      <if test="remarks != null" >
        #{remarks,jdbcType=LONGVARCHAR},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.szmsd.bas.domain.BasChannelDate" >
    update bas_channel_date
    <set >
      <if test="channelId != null" >
        channel_id = #{channelId,jdbcType=INTEGER},
      </if>
      <if test="estimateWholeTime != null" >
        estimate_whole_time = #{estimateWholeTime,jdbcType=VARCHAR},
      </if>
      <if test="sortId != null" >
        sort_id = #{sortId,jdbcType=INTEGER},
      </if>
      <if test="createTime != null" >
        create_time = #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updateTime != null" >
        update_time = #{updateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="shipmentNodeCode != null" >
        shipment_node_code = #{shipmentNodeCode,jdbcType=VARCHAR},
      </if>
      <if test="shipmentNodeName != null" >
        shipment_node_name = #{shipmentNodeName,jdbcType=VARCHAR},
      </if>
      <if test="remarks != null" >
        remarks = #{remarks,jdbcType=LONGVARCHAR},
      </if>

    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKeyWithBLOBs" parameterType="com.szmsd.bas.domain.BasChannelDate" >
    update bas_channel_date
    set channel_id = #{channelId,jdbcType=INTEGER},
      estimate_whole_time = #{estimateWholeTime,jdbcType=VARCHAR},
      sort_id = #{sortId,jdbcType=INTEGER},
      create_time = #{createTime,jdbcType=TIMESTAMP},
      update_time = #{updateTime,jdbcType=TIMESTAMP},
      shipment_node_code = #{shipmentNodeCode,jdbcType=VARCHAR},
      shipment_node_name = #{shipmentNodeName,jdbcType=VARCHAR},
      remarks = #{remarks,jdbcType=LONGVARCHAR}
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.szmsd.bas.domain.BasChannelDate" >
    update bas_channel_date
    set channel_id = #{channelId,jdbcType=INTEGER},
      estimate_whole_time = #{estimateWholeTime,jdbcType=VARCHAR},
      sort_id = #{sortId,jdbcType=INTEGER},
      create_time = #{createTime,jdbcType=TIMESTAMP},
      update_time = #{updateTime,jdbcType=TIMESTAMP},
      shipment_node_code = #{shipmentNodeCode,jdbcType=VARCHAR},
      shipment_node_name = #{shipmentNodeName,jdbcType=VARCHAR}
    where id = #{id,jdbcType=INTEGER}
  </update>
</mapper>